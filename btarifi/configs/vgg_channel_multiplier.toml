# basics
model = "vgg7"
dataset = "cifar10"
task = "cls"

max_epochs = 25
batch_size = 256
learning_rate = 1e-4
accelerator = "cpu"
project = "lab-4_vgg-search-channel-multiplier_v4"
seed = 42
log_every_n_steps = 5
# load_name = "./mase_output/jsc-toy-lab-4/software/training_ckpts/best-v1.ckpt"
# load_type = "pl"

[search.search_space]
name = "transform/conv2d_channel_multiplier"

[search.search_space.setup]
by = "name"

[search.search_space.seed.default.config]
# the only choice "NA" is used to indicate that layers are not quantized by default
name = ["NA"]

[search.search_space.seed.feature_layers_1.config]
# if search.search_space.setup.by = "name", this seed will be used to quantize the mase graph node with name "seq_blocks_2"
name = ["output_only"]
channel_multiplier = [2, 4]

[search.search_space.seed.feature_layers_3.config]
# if search.search_space.setup.by = "name", this seed will be used to quantize the mase graph node with name "seq_blocks_2"
name = ["both"]
channel_multiplier = [2, 4]

[search.search_space.seed.feature_layers_7.config]
# if search.search_space.setup.by = "name", this seed will be used to quantize the mase graph node with name "seq_blocks_2"
name = ["input_only"]
channel_multiplier = [2, 4]

[search.strategy]
name = "optuna"
eval_mode = false

[search.strategy.sw_runner.basic_train]
name = "accuracy"
data_loader = "train_dataloader"
num_samples = 10000
max_epochs = 10
lr_scheduler = "linear"
optimizer = "adam"
learning_rate = 1e-3
num_warmup_steps = 0

# [search.strategy.sw_runner.basic_evaluation]
# name = "accuracy"
# data_loader = "val_dataloader"
# num_samples = 1024

[search.strategy.hw_runner.hw_dummy]
name = "hw_dummy"

[search.strategy.setup]
n_jobs = 1
n_trials = 50
timeout = 20000
sampler = "tpe"
# sum_scaled_metrics = true # single objective
# direction = "maximize"
sum_scaled_metrics = false # multi objective

[search.strategy.metrics]
# loss.scale = 1.0
# loss.direction = "minimize"
accuracy.scale = 1.0
accuracy.direction = "maximize"
# average_bitwidth.scale = 0.2
# average_bitwidth.direction = "minimize"
